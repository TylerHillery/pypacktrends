name: dbt PyPI

on:
  workflow_dispatch:
    inputs:
      start_week:
        description: 'Start week (YYYY-MM-DD Monday Inclusive)'
        required: false
        type: string
        default: ''
      end_week:
        description: 'End week (YYYY-MM-DD Monday Inclusive)'
        required: false
        type: string
        default: ''

permissions:
  contents: read
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  dbt-pypi:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./dbt
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      - name: Install python dependencies
        run: |
            export UV_PROJECT_ENVIRONMENT="${pythonLocation}"
            uv sync --frozen
      - name: Connect Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:cicd
      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DBT_SERVICE_ACCOUNT_EMAIL }}
      - name: Set up Google Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
      - name: Install dbt dependencies
        run: dbt deps
      - name: dbt Build
        run: |
          START_WEEK=${{ inputs.start_week }}
          END_WEEK=${{ inputs.end_week }}

          if [ -z "$START_WEEK" ]; then
            START_WEEK=$(date -u -d "monday last week" '+%Y-%m-%d')
          fi
          if [ -z "$END_WEEK" ]; then
              END_WEEK=$(date -u -d "monday last week" '+%Y-%m-%d')
          fi

          # Validate dates
          # Convert dates to seconds since epoch for comparison
          start_seconds=$(date -d "$START_WEEK" +%s)
          end_seconds=$(date -d "$END_WEEK" +%s)

          if [ $start_seconds -gt $end_seconds ]; then
            echo "Error: Start week ($START_WEEK) must be before or equal to end week ($END_WEEK)"
            exit 1
          fi

          echo "Using date range: $START_WEEK to $END_WEEK"
          dbt build --target prod --fail-fast --select +pypi_package_downloads_weekly_metrics --vars '{"start_date": $START_WEEK, "end_date": $END_WEEK}'
      - name: dbt Doc Generate
        run: dbt docs generate --target prod
      - name: Sync dbt docs to VPS
        run: rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" target/ github@pypacktrends-prod:/home/github/pypacktrends/dbt/target
