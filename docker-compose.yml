services:
  backend:
    image: '${BACKEND_DOCKER_IMAGE_URL-ghcr.io/tylerhillery/pypacktrends/backend}:${BACKEND_TAG-latest}'
    restart: always
    networks:
      - caddy
    volumes:
      - ./data/:/app/data/
    environment:
      ENVIRONMENT: prod
      SENTRY_DSN: ${SENTRY_DSN}
      SQLITE_DB_PATH: ${SQLITE_DB_PATH-/app/data/pypacktrends.db}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health-check/"]
      interval: 10s
      timeout: 5s
      retries: 5

  caddy:
    container_name: caddy
    image: caddy/caddy:2.8.4-alpine
    restart: always
    networks:
      - caddy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./dbt/target:/srv/www/dbtdocs
      - caddy_data:/data
      - caddy_config:/config
    environment:
      DOMAIN: ${DOMAIN-pypacktrends.com}
      BACKEND_CONTAINER_NAME: ${BACKEND_CONTAINER_NAME-pypacktrends-backend-1}
      BACKEND_CONTAINER_PORT: ${BACKEND_CONTAINER_PORT-8000}

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - caddy

  alloy:
    container_name: alloy
    image: grafana/alloy:latest
    restart: always
    command: >
      run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    volumes:
      - ./alloy/config.alloy:/etc/alloy/config.alloy
      - grafana_data:/var/lib/alloy/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - caddy
    environment:
      GRAFANA_API_KEY: ${GRAFANA_API_KEY}
      GRAFANA_PROM_USER: ${GRAFANA_PROM_USER}
      GRAFANA_LOKI_USER: ${GRAFANA_LOKI_USER}

  litestream:
    container_name: litestream
    image: litestream/litestream
    restart: always
    command: replicate
    volumes:
      - ./data/:/data
      - ./litestream/litestream.yml:/etc/litestream.yml
    networks:
      - caddy
    environment:
      CLOUDFLARE_ACCOUNT_ID: ${CLOUDFLARE_ACCOUNT_ID}
      CLOUDFLARE_R2_BUCKET_NAME: ${CLOUDFLARE_R2_BUCKET_NAME}
      CLOUDFLARE_R2_ACCESS_KEY_ID: ${CLOUDFLARE_R2_ACCESS_KEY_ID}
      CLOUDFLARE_R2_SECRET_ACCESS_KEY: ${CLOUDFLARE_R2_SECRET_ACCESS_KEY}

networks:
  caddy:
    name: caddy

volumes:
  caddy_data:
    name: caddy-data
  caddy_config:
    name: caddy-config
  grafana_data:
    name: grafana-data
